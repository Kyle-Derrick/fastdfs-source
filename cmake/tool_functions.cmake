function(search_makefile_var content var_name suffix result)
    string(REGEX MATCH "${var_name}[ 	]*=[ 	]*([a-zA-Z0-9-_/.]+\\.${suffix}[ 	]*(\\\\\r?\n[ 	]*)?)+" match_result "${content}")
    string(REGEX REPLACE "${var_name}[ 	]*=[ 	]*" "" match_result "${match_result}")
    string(REGEX REPLACE "[\\\\\n 	]+" ";" match_list "${match_result}")
    set(${result} ${match_list} PARENT_SCOPE)
endfunction()

function(search_makefile path module)
    file(READ ${path} content)

    set(source_list)
    set(header_list)
    get_filename_component(path_dir ${path} DIRECTORY)
    foreach (item ${ARGN})
        search_makefile_var("${content}" ${item} "(h|o|lo)" item_result)
        set(file_ext)
        foreach (file_item ${item_result})
            if (NOT file_ext)
                get_filename_component(file_ext ${file_item} EXT)
            endif ()
            if ("${file_ext}" STREQUAL ".h")
                convert_file_single(${path_dir} "" file_item ${file_item})
                list(APPEND header_list ${file_item})
            else ()
                convert_file_single(${path_dir} "c" file_item ${file_item})
                list(APPEND source_list ${file_item})
            endif ()
        endforeach ()
    endforeach ()
    set(${module}_sources ${source_list} PARENT_SCOPE)
    set(${module}_headers ${header_list} PARENT_SCOPE)
endfunction()

macro(convert_file_only path out_list)
    convert_file(${path} "" "" ${out_list} ${ARGN})
endmacro()

macro(convert_file_single path to_suffix final_path file_path)
    set(final_file ${file_path})
    if (NOT "${to_suffix}" STREQUAL "")
        string(REGEX REPLACE "\\.(o|lo)$" ".${to_suffix}" final_file ${final_file})
    endif ()

    string(CONCAT full_path ${path} "/" ${final_file} )
    file(RELATIVE_PATH ${final_path} ${CMAKE_CURRENT_SOURCE_DIR} "${full_path}")
endmacro()

function(convert_file path to_suffix out_list)
    set(result_list)
    foreach (item ${ARGN})
        convert_file_single(${path} ${to_suffix} final_path ${item})
        list(APPEND result_list ${final_path})
    endforeach ()
    set(${out_list} ${result_list} PARENT_SCOPE)
endfunction()